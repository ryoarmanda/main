@startuml

class ModelHistory {
+copy() : ModelHistory
+addToPastChanges(changes : ModelChanges): void
+addToFutureChanges(changes : ModelChanges): void
+clearFutureChanges(): void
+isPastChangesEmpty(): boolean
+isFutureChangesEmpty(): boolean
+getPrevChanges(): Optional<ModelChanges>
+getNextChanges(): Optional<ModelChanges>
}

class ModelChanges {
-String: changeMessage
-MooLah: mooLah
-UserPrefs: userPrefs:
-Predicate<? super Expense>: expensePredicate
-Predicate<? super Event>: eventPredicate
-Predicate<? super Budget>: budgetPredicate
+{static}compareModels(base : Model, other : Model): ModelChanges
+getMooLah(): Optional<MooLah>
+getUserPrefs(): Optional<UserPrefs>
+getExpensePredicate(): Optional<Predicate<? super Expense>>
+getEventPredicate(): Optional<Predicate<? super Event>>
+getBudgetPredicate(): Optional<Predicate<? super Budget>>
+revertChanges()
}

ModelHistory *-right-> ModelChanges : pastChanges
ModelHistory *-right-> ModelChanges : futureChanges

@enduml
